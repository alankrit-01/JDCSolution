const express = require('express');
// const Web3 = require('web3');
const ethers = require('ethers');


const app = express();

var contractAbi=
{
  "_format": "hh-sol-artifact-1",
  "contractName": "Supplychain",
  "sourceName": "contracts/Supplychain.sol",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "BatchIDToProductIDMapping",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "BatchIDs",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "BatchMapping",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "BatchID",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "BatchSize",
          "type": "uint256"
        },
        {
          "internalType": "string",
          "name": "BatchDescription",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "ProductTemplateID",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "Factory",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "Distributor",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "Retailer",
          "type": "address"
        },
        {
          "internalType": "string",
          "name": "FactoryLocation",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "DateOfProduction",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "state",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "BatchTemplateIDs",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "BatchTemplateMAP",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "batchTemplateID",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "productTemplateID",
          "type": "uint256"
        },
        {
          "internalType": "string",
          "name": "description",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "batchSize",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "factoryADDRESS",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "ProductIDs",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "ProductMapping",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "ProductID",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "ProductTemplateID",
          "type": "uint256"
        },
        {
          "internalType": "string",
          "name": "DOM",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "ProductTemplateIDs",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "ProductTemplateMAP",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "productTemplateID",
          "type": "uint256"
        },
        {
          "internalType": "string",
          "name": "name",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "description",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_batchTemplateID",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_productTemplateID",
          "type": "uint256"
        },
        {
          "internalType": "string",
          "name": "_description",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "_batchSize",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "_factoryADDRESS",
          "type": "address"
        }
      ],
      "name": "addBatchTemplate",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_productTemplateID",
          "type": "uint256"
        },
        {
          "internalType": "string",
          "name": "_name",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_description",
          "type": "string"
        }
      ],
      "name": "addProductTemplate",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "batchID",
          "type": "uint256"
        },
        {
          "internalType": "uint256[]",
          "name": "productIDs",
          "type": "uint256[]"
        },
        {
          "internalType": "uint256",
          "name": "batchSize",
          "type": "uint256"
        },
        {
          "internalType": "string",
          "name": "batchDescription",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "productTemplateID",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "factory",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "distributor",
          "type": "address"
        },
        {
          "internalType": "string",
          "name": "factoryLocation",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "dateOfProduction",
          "type": "string"
        }
      ],
      "name": "batchProduced",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "batchID",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "retailer",
          "type": "address"
        }
      ],
      "name": "distributorSellToRetailer",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getAllBatchIDs",
      "outputs": [
        {
          "internalType": "uint256[]",
          "name": "",
          "type": "uint256[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getAllBatchTemplateIDs",
      "outputs": [
        {
          "internalType": "uint256[]",
          "name": "",
          "type": "uint256[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getAllProductIDs",
      "outputs": [
        {
          "internalType": "uint256[]",
          "name": "",
          "type": "uint256[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getAllProductTemplateIDs",
      "outputs": [
        {
          "internalType": "uint256[]",
          "name": "",
          "type": "uint256[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "batchID",
          "type": "uint256"
        }
      ],
      "name": "getProductIdsForaBatch",
      "outputs": [
        {
          "internalType": "uint256[]",
          "name": "",
          "type": "uint256[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "x",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "bytecode": "0x6080604052600a60005534801561001557600080fd5b50611443806100256000396000f3fe608060405234801561001057600080fd5b50600436106101215760003560e01c8063793560dd116100ad5780639247e9fd116100715780639247e9fd1461023c57806399ae96e214610285578063a78317f814610298578063bf801df1146102ab578063eac0e977146102d457600080fd5b8063793560dd146101e25780637ae4ee04146101ea5780638bd428801461020e5780638c4c42cd1461022157806390973cce1461022957600080fd5b80634c27729c116100f45780634c27729c1461017d5780634ca20f34146101855780634e9394861461019857806371d1dc0c146101ad578063759b8fba146101cf57600080fd5b80630c55699c14610126578063392a70a6146101425780633ab95f30146101625780633b7d255c14610175575b600080fd5b61012f60005481565b6040519081526020015b60405180910390f35b610155610150366004610d59565b6102f6565b6040516101399190610d72565b61012f610170366004610d59565b610358565b610155610379565b6101556103d1565b61012f610193366004610d59565b610427565b6101ab6101a6366004610e6d565b610437565b005b6101c06101bb366004610d59565b6104ca565b60405161013993929190610f20565b6101ab6101dd366004610ff1565b6105fc565b61015561084d565b6101fd6101f8366004610d59565b6108a3565b6040516101399594939291906110dd565b61012f61021c366004610d59565b610966565b610155610976565b61012f61023736600461111e565b6109cc565b6101ab61024a366004611140565b6000918252600760205260409091206006810180546001600160a01b0319166001600160a01b03909316929092179091556001600990910155565b6101ab61029336600461116c565b6109fd565b61012f6102a6366004610d59565b610ac8565b6102be6102b9366004610d59565b610ad8565b6040516101399a999897969594939291906111d7565b6102e76102e2366004610d59565b610cd1565b6040516101399392919061125f565b60008181526008602090815260409182902080548351818402810184019094528084526060939283018282801561034c57602002820191906000526020600020905b815481526020019060010190808311610338575b50505050509050919050565b6003818154811061036857600080fd5b600091825260209091200154905081565b606060038054806020026020016040519081016040528092919081815260200182805480156103c757602002820191906000526020600020905b8154815260200190600101908083116103b3575b5050505050905090565b606060048054806020026020016040519081016040528092919081815260200182805480156103c757602002820191906000526020600020908154815260200190600101908083116103b3575050505050905090565b6004818154811061036857600080fd5b604080516060810182528481526020808201858152828401859052600087815260019283905293909320825181559251919291908201906104789082611310565b506040820151600282019061048d9082611310565b5050600380546001810182556000919091527fc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85b0193909355505050565b6001602081905260009182526040909120805491810180546104eb90611287565b80601f016020809104026020016040519081016040528092919081815260200182805461051790611287565b80156105645780601f1061053957610100808354040283529160200191610564565b820191906000526020600020905b81548152906001019060200180831161054757829003601f168201915b50505050509080600201805461057990611287565b80601f01602080910402602001604051908101604052809291908181526020018280546105a590611287565b80156105f25780601f106105c7576101008083540402835291602001916105f2565b820191906000526020600020905b8154815290600101906020018083116105d557829003601f168201915b5050505050905083565b60408051610140810182528a815260208082018a81528284018a8152606084018a90526001600160a01b03808a166080860152881660a0850152600060c0850181905260e08501889052610100850187905261012085018190528e81526007909352939091208251815590516001820155915190919060028201906106819082611310565b506060820151600382015560808201516004820180546001600160a01b039283166001600160a01b03199182161790915560a084015160058401805491841691831691909117905560c084015160068401805491909316911617905560e082015160078201906106f19082611310565b5061010082015160088201906107079082611310565b5061012091909101516009918201558054600181019091557f6e1540171b6c0c960b71a7020d9f60077f6af931a8bbf590da0223dacf75c7af0189905560008981526008602090815260409091208951610763928b0190610cf9565b5060005b878110156108415760405180606001604052808a838151811061078c5761078c6113d0565b6020026020010151815260200187815260200183815250600560008b84815181106107b9576107b96113d0565b60200260200101518152602001908152602001600020600082015181600001556020820151816001015560408201518160020190816107f89190611310565b509050506006898281518110610810576108106113d0565b6020908102919091018101518254600181018455600093845291909220015580610839816113e6565b915050610767565b50505050505050505050565b606060098054806020026020016040519081016040528092919081815260200182805480156103c757602002820191906000526020600020908154815260200190600101908083116103b3575050505050905090565b6002602081905260009182526040909120805460018201549282018054919392916108cd90611287565b80601f01602080910402602001604051908101604052809291908181526020018280546108f990611287565b80156109465780601f1061091b57610100808354040283529160200191610946565b820191906000526020600020905b81548152906001019060200180831161092957829003601f168201915b5050505060038301546004909301549192916001600160a01b0316905085565b6009818154811061036857600080fd5b606060068054806020026020016040519081016040528092919081815260200182805480156103c757602002820191906000526020600020908154815260200190600101908083116103b3575050505050905090565b600860205281600052604060002081815481106109e857600080fd5b90600052602060002001600091509150505481565b6040805160a0810182528681526020808201878152828401878152606084018790526001600160a01b038616608085015260008a8152600293849052949094208351815590516001820155925191929190820190610a5b9082611310565b5060608201516003820155608090910151600491820180546001600160a01b0319166001600160a01b0390921691909117905580546001810182556000919091527f8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19b019490945550505050565b6006818154811061036857600080fd5b60076020526000908152604090208054600182015460028301805492939192610b0090611287565b80601f0160208091040260200160405190810160405280929190818152602001828054610b2c90611287565b8015610b795780601f10610b4e57610100808354040283529160200191610b79565b820191906000526020600020905b815481529060010190602001808311610b5c57829003601f168201915b5050506003840154600485015460058601546006870154600788018054979894976001600160a01b03948516975092841695509216929190610bba90611287565b80601f0160208091040260200160405190810160405280929190818152602001828054610be690611287565b8015610c335780601f10610c0857610100808354040283529160200191610c33565b820191906000526020600020905b815481529060010190602001808311610c1657829003601f168201915b505050505090806008018054610c4890611287565b80601f0160208091040260200160405190810160405280929190818152602001828054610c7490611287565b8015610cc15780601f10610c9657610100808354040283529160200191610cc1565b820191906000526020600020905b815481529060010190602001808311610ca457829003601f168201915b505050505090806009015490508a565b6005602052600090815260409020805460018201546002830180549293919261057990611287565b828054828255906000526020600020908101928215610d34579160200282015b82811115610d34578251825591602001919060010190610d19565b50610d40929150610d44565b5090565b5b80821115610d405760008155600101610d45565b600060208284031215610d6b57600080fd5b5035919050565b6020808252825182820181905260009190848201906040850190845b81811015610daa57835183529284019291840191600101610d8e565b50909695505050505050565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff81118282101715610df557610df5610db6565b604052919050565b600082601f830112610e0e57600080fd5b813567ffffffffffffffff811115610e2857610e28610db6565b610e3b601f8201601f1916602001610dcc565b818152846020838601011115610e5057600080fd5b816020850160208301376000918101602001919091529392505050565b600080600060608486031215610e8257600080fd5b83359250602084013567ffffffffffffffff80821115610ea157600080fd5b610ead87838801610dfd565b93506040860135915080821115610ec357600080fd5b50610ed086828701610dfd565b9150509250925092565b6000815180845260005b81811015610f0057602081850181015186830182015201610ee4565b506000602082860101526020601f19601f83011685010191505092915050565b838152606060208201526000610f396060830185610eda565b8281036040840152610f4b8185610eda565b9695505050505050565b600082601f830112610f6657600080fd5b8135602067ffffffffffffffff821115610f8257610f82610db6565b8160051b610f91828201610dcc565b9283528481018201928281019087851115610fab57600080fd5b83870192505b84831015610fca57823582529183019190830190610fb1565b979650505050505050565b80356001600160a01b0381168114610fec57600080fd5b919050565b60008060008060008060008060006101208a8c03121561101057600080fd5b8935985060208a013567ffffffffffffffff8082111561102f57600080fd5b61103b8d838e01610f55565b995060408c0135985060608c013591508082111561105857600080fd5b6110648d838e01610dfd565b975060808c0135965061107960a08d01610fd5565b955061108760c08d01610fd5565b945060e08c013591508082111561109d57600080fd5b6110a98d838e01610dfd565b93506101008c01359150808211156110c057600080fd5b506110cd8c828d01610dfd565b9150509295985092959850929598565b85815284602082015260a0604082015260006110fc60a0830186610eda565b6060830194909452506001600160a01b03919091166080909101529392505050565b6000806040838503121561113157600080fd5b50508035926020909101359150565b6000806040838503121561115357600080fd5b8235915061116360208401610fd5565b90509250929050565b600080600080600060a0868803121561118457600080fd5b8535945060208601359350604086013567ffffffffffffffff8111156111a957600080fd5b6111b588828901610dfd565b935050606086013591506111cb60808701610fd5565b90509295509295909350565b60006101408c83528b60208401528060408401526111f78184018c610eda565b606084018b90526001600160a01b038a8116608086015289811660a0860152881660c085015283810360e085015290506112318187610eda565b90508281036101008401526112468186610eda565b915050826101208301529b9a5050505050505050505050565b83815282602082015260606040820152600061127e6060830184610eda565b95945050505050565b600181811c9082168061129b57607f821691505b6020821081036112bb57634e487b7160e01b600052602260045260246000fd5b50919050565b601f82111561130b57600081815260208120601f850160051c810160208610156112e85750805b601f850160051c820191505b81811015611307578281556001016112f4565b5050505b505050565b815167ffffffffffffffff81111561132a5761132a610db6565b61133e816113388454611287565b846112c1565b602080601f831160018114611373576000841561135b5750858301515b600019600386901b1c1916600185901b178555611307565b600085815260208120601f198616915b828110156113a257888601518255948401946001909101908401611383565b50858210156113c05787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b634e487b7160e01b600052603260045260246000fd5b60006001820161140657634e487b7160e01b600052601160045260246000fd5b506001019056fea264697066735822122034c0adce309e032d0aa15b94fe7c9609a8ca5da72e4f3eb504da8312bdaac09a64736f6c63430008110033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106101215760003560e01c8063793560dd116100ad5780639247e9fd116100715780639247e9fd1461023c57806399ae96e214610285578063a78317f814610298578063bf801df1146102ab578063eac0e977146102d457600080fd5b8063793560dd146101e25780637ae4ee04146101ea5780638bd428801461020e5780638c4c42cd1461022157806390973cce1461022957600080fd5b80634c27729c116100f45780634c27729c1461017d5780634ca20f34146101855780634e9394861461019857806371d1dc0c146101ad578063759b8fba146101cf57600080fd5b80630c55699c14610126578063392a70a6146101425780633ab95f30146101625780633b7d255c14610175575b600080fd5b61012f60005481565b6040519081526020015b60405180910390f35b610155610150366004610d59565b6102f6565b6040516101399190610d72565b61012f610170366004610d59565b610358565b610155610379565b6101556103d1565b61012f610193366004610d59565b610427565b6101ab6101a6366004610e6d565b610437565b005b6101c06101bb366004610d59565b6104ca565b60405161013993929190610f20565b6101ab6101dd366004610ff1565b6105fc565b61015561084d565b6101fd6101f8366004610d59565b6108a3565b6040516101399594939291906110dd565b61012f61021c366004610d59565b610966565b610155610976565b61012f61023736600461111e565b6109cc565b6101ab61024a366004611140565b6000918252600760205260409091206006810180546001600160a01b0319166001600160a01b03909316929092179091556001600990910155565b6101ab61029336600461116c565b6109fd565b61012f6102a6366004610d59565b610ac8565b6102be6102b9366004610d59565b610ad8565b6040516101399a999897969594939291906111d7565b6102e76102e2366004610d59565b610cd1565b6040516101399392919061125f565b60008181526008602090815260409182902080548351818402810184019094528084526060939283018282801561034c57602002820191906000526020600020905b815481526020019060010190808311610338575b50505050509050919050565b6003818154811061036857600080fd5b600091825260209091200154905081565b606060038054806020026020016040519081016040528092919081815260200182805480156103c757602002820191906000526020600020905b8154815260200190600101908083116103b3575b5050505050905090565b606060048054806020026020016040519081016040528092919081815260200182805480156103c757602002820191906000526020600020908154815260200190600101908083116103b3575050505050905090565b6004818154811061036857600080fd5b604080516060810182528481526020808201858152828401859052600087815260019283905293909320825181559251919291908201906104789082611310565b506040820151600282019061048d9082611310565b5050600380546001810182556000919091527fc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85b0193909355505050565b6001602081905260009182526040909120805491810180546104eb90611287565b80601f016020809104026020016040519081016040528092919081815260200182805461051790611287565b80156105645780601f1061053957610100808354040283529160200191610564565b820191906000526020600020905b81548152906001019060200180831161054757829003601f168201915b50505050509080600201805461057990611287565b80601f01602080910402602001604051908101604052809291908181526020018280546105a590611287565b80156105f25780601f106105c7576101008083540402835291602001916105f2565b820191906000526020600020905b8154815290600101906020018083116105d557829003601f168201915b5050505050905083565b60408051610140810182528a815260208082018a81528284018a8152606084018a90526001600160a01b03808a166080860152881660a0850152600060c0850181905260e08501889052610100850187905261012085018190528e81526007909352939091208251815590516001820155915190919060028201906106819082611310565b506060820151600382015560808201516004820180546001600160a01b039283166001600160a01b03199182161790915560a084015160058401805491841691831691909117905560c084015160068401805491909316911617905560e082015160078201906106f19082611310565b5061010082015160088201906107079082611310565b5061012091909101516009918201558054600181019091557f6e1540171b6c0c960b71a7020d9f60077f6af931a8bbf590da0223dacf75c7af0189905560008981526008602090815260409091208951610763928b0190610cf9565b5060005b878110156108415760405180606001604052808a838151811061078c5761078c6113d0565b6020026020010151815260200187815260200183815250600560008b84815181106107b9576107b96113d0565b60200260200101518152602001908152602001600020600082015181600001556020820151816001015560408201518160020190816107f89190611310565b509050506006898281518110610810576108106113d0565b6020908102919091018101518254600181018455600093845291909220015580610839816113e6565b915050610767565b50505050505050505050565b606060098054806020026020016040519081016040528092919081815260200182805480156103c757602002820191906000526020600020908154815260200190600101908083116103b3575050505050905090565b6002602081905260009182526040909120805460018201549282018054919392916108cd90611287565b80601f01602080910402602001604051908101604052809291908181526020018280546108f990611287565b80156109465780601f1061091b57610100808354040283529160200191610946565b820191906000526020600020905b81548152906001019060200180831161092957829003601f168201915b5050505060038301546004909301549192916001600160a01b0316905085565b6009818154811061036857600080fd5b606060068054806020026020016040519081016040528092919081815260200182805480156103c757602002820191906000526020600020908154815260200190600101908083116103b3575050505050905090565b600860205281600052604060002081815481106109e857600080fd5b90600052602060002001600091509150505481565b6040805160a0810182528681526020808201878152828401878152606084018790526001600160a01b038616608085015260008a8152600293849052949094208351815590516001820155925191929190820190610a5b9082611310565b5060608201516003820155608090910151600491820180546001600160a01b0319166001600160a01b0390921691909117905580546001810182556000919091527f8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19b019490945550505050565b6006818154811061036857600080fd5b60076020526000908152604090208054600182015460028301805492939192610b0090611287565b80601f0160208091040260200160405190810160405280929190818152602001828054610b2c90611287565b8015610b795780601f10610b4e57610100808354040283529160200191610b79565b820191906000526020600020905b815481529060010190602001808311610b5c57829003601f168201915b5050506003840154600485015460058601546006870154600788018054979894976001600160a01b03948516975092841695509216929190610bba90611287565b80601f0160208091040260200160405190810160405280929190818152602001828054610be690611287565b8015610c335780601f10610c0857610100808354040283529160200191610c33565b820191906000526020600020905b815481529060010190602001808311610c1657829003601f168201915b505050505090806008018054610c4890611287565b80601f0160208091040260200160405190810160405280929190818152602001828054610c7490611287565b8015610cc15780601f10610c9657610100808354040283529160200191610cc1565b820191906000526020600020905b815481529060010190602001808311610ca457829003601f168201915b505050505090806009015490508a565b6005602052600090815260409020805460018201546002830180549293919261057990611287565b828054828255906000526020600020908101928215610d34579160200282015b82811115610d34578251825591602001919060010190610d19565b50610d40929150610d44565b5090565b5b80821115610d405760008155600101610d45565b600060208284031215610d6b57600080fd5b5035919050565b6020808252825182820181905260009190848201906040850190845b81811015610daa57835183529284019291840191600101610d8e565b50909695505050505050565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff81118282101715610df557610df5610db6565b604052919050565b600082601f830112610e0e57600080fd5b813567ffffffffffffffff811115610e2857610e28610db6565b610e3b601f8201601f1916602001610dcc565b818152846020838601011115610e5057600080fd5b816020850160208301376000918101602001919091529392505050565b600080600060608486031215610e8257600080fd5b83359250602084013567ffffffffffffffff80821115610ea157600080fd5b610ead87838801610dfd565b93506040860135915080821115610ec357600080fd5b50610ed086828701610dfd565b9150509250925092565b6000815180845260005b81811015610f0057602081850181015186830182015201610ee4565b506000602082860101526020601f19601f83011685010191505092915050565b838152606060208201526000610f396060830185610eda565b8281036040840152610f4b8185610eda565b9695505050505050565b600082601f830112610f6657600080fd5b8135602067ffffffffffffffff821115610f8257610f82610db6565b8160051b610f91828201610dcc565b9283528481018201928281019087851115610fab57600080fd5b83870192505b84831015610fca57823582529183019190830190610fb1565b979650505050505050565b80356001600160a01b0381168114610fec57600080fd5b919050565b60008060008060008060008060006101208a8c03121561101057600080fd5b8935985060208a013567ffffffffffffffff8082111561102f57600080fd5b61103b8d838e01610f55565b995060408c0135985060608c013591508082111561105857600080fd5b6110648d838e01610dfd565b975060808c0135965061107960a08d01610fd5565b955061108760c08d01610fd5565b945060e08c013591508082111561109d57600080fd5b6110a98d838e01610dfd565b93506101008c01359150808211156110c057600080fd5b506110cd8c828d01610dfd565b9150509295985092959850929598565b85815284602082015260a0604082015260006110fc60a0830186610eda565b6060830194909452506001600160a01b03919091166080909101529392505050565b6000806040838503121561113157600080fd5b50508035926020909101359150565b6000806040838503121561115357600080fd5b8235915061116360208401610fd5565b90509250929050565b600080600080600060a0868803121561118457600080fd5b8535945060208601359350604086013567ffffffffffffffff8111156111a957600080fd5b6111b588828901610dfd565b935050606086013591506111cb60808701610fd5565b90509295509295909350565b60006101408c83528b60208401528060408401526111f78184018c610eda565b606084018b90526001600160a01b038a8116608086015289811660a0860152881660c085015283810360e085015290506112318187610eda565b90508281036101008401526112468186610eda565b915050826101208301529b9a5050505050505050505050565b83815282602082015260606040820152600061127e6060830184610eda565b95945050505050565b600181811c9082168061129b57607f821691505b6020821081036112bb57634e487b7160e01b600052602260045260246000fd5b50919050565b601f82111561130b57600081815260208120601f850160051c810160208610156112e85750805b601f850160051c820191505b81811015611307578281556001016112f4565b5050505b505050565b815167ffffffffffffffff81111561132a5761132a610db6565b61133e816113388454611287565b846112c1565b602080601f831160018114611373576000841561135b5750858301515b600019600386901b1c1916600185901b178555611307565b600085815260208120601f198616915b828110156113a257888601518255948401946001909101908401611383565b50858210156113c05787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b634e487b7160e01b600052603260045260246000fd5b60006001820161140657634e487b7160e01b600052601160045260246000fd5b506001019056fea264697066735822122034c0adce309e032d0aa15b94fe7c9609a8ca5da72e4f3eb504da8312bdaac09a64736f6c63430008110033",
  "linkReferences": {},
  "deployedLinkReferences": {}

}

let contractAddress ="0xEEd5B8edC86013C360E87Ff39a28159DdDC1D9e8"; 
const privateKey = '4a5108f992a891f20aa2a0cec796d8cdf692d86b2ef57b2fea89da3ea02fff40'; //Alankrit2
let contract;
app.use(express.json()); 

const connectToMatic = async () => {
  try {    
    // const provider = new ethers.providers.InfuraProvider(network, infuraKey);
    const provider = new ethers.providers.JsonRpcProvider("https://rpc-mumbai.maticvigil.com");
    // console.log(provider);  
    const signer = new ethers.Wallet(privateKey, provider);
    // console.log(signer);   
    const contractInstance = new ethers.Contract(contractAddress, contractAbi.abi, signer);
    contract =contractInstance;
    // console.log(await contractInstance.getAllProductTemplateIDs())
    // const tx =await contractInstance.addProductTemplate(1234132,"Tommy Hilfiger Watch","Men Black Analogue Watch Black");
    // const tx =await contractInstance.batchProduced(                                      
    //   647261,// batchID                                                 
    //   [3882819,498119,183781], // Array of product Ids               
    //   3,// Batch Size                                                   
    //   "Batch of 3 Jeans",// Batch Description                                        
    //   1837183,// Product temlplate ID                                    
    //   "0x71bE63f3384f5fb98995898A86B02Fb2426c5788",// factory address     
    //   "0x90F79bf6EB2c4f870365E785982E1f101E93b906",// distributor address
    //   "My Factory location",// factory Location                                   
    //   "1223123"// dateOfProduction                                         
    // )   
    // await tx.wait(); 

  } catch (err) {
    console.log(err);
    throw new Error(err?.message || "Something Went Wrong");
  }
}


connectToMatic();

app.get('/api/viewAvailableBatches', async (req, res) => {
  try {
    let result={};
    const distibutor= req.query.distibutor;
    // console.log(distibutor);
    const IDs =await contract.getAllBatchIDs();
    let counter=0;
    for(let i=0; i<IDs.length; i++){
      const batchData =await contract.BatchMapping(IDs[i]);
      if(batchData.Distributor==distibutor && batchData.state==0){
        const productIDs= (await contract.getProductIdsForaBatch(IDs[i]));
        // console.log(IDs[i])
        // result[IDs[i].toNumber()]={"productIDs":productIDs ,"batchData":batchData};
        result[counter]={"batchID":IDs[i].toNumber(),"productIDs":productIDs ,"batchData":batchData};
        counter++;
      } 
    }
    if(result){
      res.status(200).json({status:"success", message:result});
    }else {
      res.status(200).json({status:"success", message:"Returned data is empty"});
    }
  } catch (error) {
    console.log(error.message);
    res.status(400).send({ error: error.message });
  } 
});

app.post('/api/distributorSellToRetailer',async(req,res)=>{
  try {
    // console.log(req.body);
    const batchID =req.body.batchID;
    const retailerAddress =req.body.retailerAddress;
    const tx =await contract.distributorSellToRetailer(batchID,retailerAddress);
    tx.wait();
    res.status(200).json({status:"success", message:"Batch sold to retailer"});
  } catch (error) {
    console.log(error.message);
    res.status(400).send({ error: error.message });
  }
})


app.get('/api/viewSendBatches', async (req, res) => {
  try {
    let result={};
    const distibutor= req.query.distibutor;
    const IDs =await contract.getAllBatchIDs();
    let counter=0;
    for(let i=0; i<IDs.length; i++){
      const batchData =await contract.BatchMapping(IDs[i]);
      if(batchData.Distributor==distibutor && batchData.state==1){
        const productIDs= (await contract.getProductIdsForaBatch(IDs[i]));
        // console.log(IDs[i])
        // result[IDs[i].toNumber()]={"productIDs":productIDs ,"batchData":batchData};
        result[counter]={"batchID":IDs[i].toNumber(),"productIDs":productIDs ,"batchData":batchData};
        counter++;
      } 
    }
    if(result){
      res.status(200).json({status:"success", message:result});
    }else {
      res.status(200).json({status:"success", message:"Returned data is empty"});
    }
  } catch (error) {
    console.log(error.message);
    res.status(400).send({ error: error.message });
  } 
});


app.get('/api/viewAvailableBatchesForRetailer', async (req, res) => {
  try {
    let result={};
    const distibutor= req.query.distibutor;
    const IDs =await contract.getAllBatchIDs();
    for(let i=0; i<IDs.length; i++){
      const batchData =await contract.BatchMapping(IDs[i]);
      if(batchData.Distributor==distibutor && batchData.state==0){
        const productIDs= (await contract.getProductIdsForaBatch(IDs[i]));
        // console.log(IDs[i])
        result[IDs[i].toNumber()]={"productIDs":productIDs ,"batchData":batchData};
      } 
    }
    if(result){
      res.status(200).json({status:"success", message:result});
    }else {
      res.status(200).json({status:"success", message:"Returned data is empty"});
    }
  } catch (error) {
    console.log(error.message);
    res.status(400).send({ error: error.message });
  } 
});

app.get('/', function (req, res) {
    // console.log(web3)
    res.send('Hello World');
})
 
var server = app.listen(8081, function () {
    console.log("Example app listening at http://127:0:0:1:8081")
})